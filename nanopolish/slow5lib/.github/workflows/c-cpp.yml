name: SLOW5 C/C++ CI Github

on:
  push:
    branches: [ master, dev, cleanup ]
  pull_request:
    branches: [ master, dev, cleanup ]

jobs:
  ubuntu_14:
    name: ubuntu_14
    runs-on: ubuntu-16.04
    container: ubuntu:14.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev gcc g++ autoconf automake make
    - name: env
      run: lsb_release -a &&  ldd --version && gcc --version && g++ --version
    - name: build
      run:  make -j8
    - name: test
      run: make test
  ubuntu_16:
    name: Ubuntu 16
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev
    - name: build
      run: make -j8
    - name: test
      run: make test
  ubuntu_18:
    name: Ubuntu 18
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev valgrind
    - name: build
      run:  make -j8
    - name: test
      run: make test
    - name: test valgrind
      run: ./test/test.sh mem
    - name: examples
      run: make examples
  ubuntu_20:
    name: Ubuntu 20
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev
    - name: build-gcc
      run: make -j8
    - name: test-gcc
      run: make test
    - name: build-clang
      run: make clean && make CC=clang -j8
    - name: test-clang
      run: make test
  os_x_10:
    name: OSX 10
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: brew install autoconf automake
    - name: build
      run: make -j8
    - name: test
      run: make test
    - name: examples
      run: make examples
  arm64:
    name: ubuntu arm
    runs-on: ubuntu-latest
    steps:
    - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: 'uname -a'
    - uses: actions/checkout@v1
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: >
          bash -c "apt-get update &&
          apt-get install -y zlib1g-dev gcc make &&
          ldd --version && gcc --version &&
          make && make test
